name: Create Build

on:
  workflow_dispatch:
    inputs:
      target-branch:
        description: Target branch
        required: true

permissions:
  contents: read
  id-token: write
  actions: read

jobs:

  build:
    runs-on: ubuntu-latest
    if: always() && (needs.zanata-pull.result == 'success' || needs.zanata-pull.result == 'skipped')
    outputs:
      build-vsn: ${{ steps.get-version.outputs.build-vsn }}
      uploaded: ${{ steps.gcs-upload.outputs.uploaded }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.target-branch }}
    - name: Get version
      id: get-version
      run: |
        git fetch --prune --unshallow
        echo "build-vsn=$(git describe --dirty --abbrev=7 --tags --always --first-parent)" >> $GITHUB_OUTPUT
    - name: Use Node.js 8
      uses: actions/setup-node@v3
      with:
        node-version: 8
        cache: 'npm'
    - name: npm install
      run: |
        npm install
        npm prune

  build-images:
    name: Build images
    needs: build
    if: always() && needs.build.result == 'success'
    uses: ./.github/workflows/build-images.yml
    with:
      push_registry: us-docker.pkg.dev/greymatter-development/apps/
      extra_tag: ${{ needs.build.outputs.build-vsn }}
      target_branch: ${{ inputs.target-branch }}

  publish-results:
    name: Publish Results
    needs: [build, build-images]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: technote-space/workflow-conclusion-action@v3
      if: always()
    - name: Add job summary
      run: |
        echo "## Build status: ${{ env.WORKFLOW_CONCLUSION }} ${{ env.WORKFLOW_CONCLUSION == 'success' && ':heavy_check_mark:' || ':x:' }}" >> $GITHUB_STEP_SUMMARY
        echo "Target branch: ${{ inputs.target-branch }}" >> $GITHUB_STEP_SUMMARY
        echo "Image tags: ${{ needs.build-images.outputs.image_tags }}" >> $GITHUB_STEP_SUMMARY
    - name: Notify zulip
      if: always()
      uses: zulip/github-actions-zulip/send-message@v1
      with:
        api-key: ${{ secrets.ZULIP_API_KEY }}
        email: github-bot@z.labs.greyorange.com
        organization-url: https://z.labs.greyorange.com
        to: CI Builds
        type: stream
        topic: ttpui / builds
        content: |
          # Build status: ${{ env.WORKFLOW_CONCLUSION }} ${{ env.WORKFLOW_CONCLUSION == 'success' && ':check:' || ':cross_mark:' }}
          Triggered by: `${{ github.event.sender.login }}`
          Target branch: ${{ inputs.target-branch }}
          Run URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          Image tags: ${{ needs.build-images.outputs.image_tags }}
